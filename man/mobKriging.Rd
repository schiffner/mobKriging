% Generated by roxygen2 (4.0.1): do not edit by hand
\name{mobKriging}
\alias{mobKriging}
\title{Recursive Partitioning of Kriging Models}
\usage{
mobKriging(obj, part, feat, data, control = mob_control(), km.args = list())
}
\arguments{
\item{obj}{[\code{formula} | \code{character(1)}]\cr
Either the fitting formula or the name of the target variable.
The formula looks like \code{y ~ x1 + ... + xk | z1 + .... zl}.
\code{z1} to \code{zl} are the partitioning variables (probably categorical, but numerical
ones can be in included, too), while \code{x1} to \code{xk} are the numerical variables
for the kriging models in the terminal nodes of the tree.}

\item{part}{[\code{character}]\cr
The names of the partitioning variables (\code{z1} to \code{zl}) for the tree structure.
Ignored if \code{obj} is a \code{formula}.}

\item{feat}{[\code{character}]\cr
The names of the numeric modeling features (\code{x1} to \code{xk}) passed to the kriging models in the terminal nodes.
Ignored if \code{obj} is a \code{formula}.}

\item{data}{[\code{data.frame}]\cr
Data to fit the model.}

\item{control}{[\code{list}]\cr
Passed to \code{control} in \code{\link[party]{mob}} (see also \code{\link[party]{mob_control}}).}

\item{km.args}{[\code{list}]\cr
  Further arguments passed to \code{\link[DiceKriging]{km}}.
  Note that arguments \code{design} and \code{reponse} must not be included.}
}
\value{
An object of class \code{\linkS4class{mob}} inheriting from \code{\linkS4class{BinaryTree}}.
Every node of the tree is associated with a fitted Kriging model.
}
\description{
Interface function for recursive partitioning of Kriging models.
}
\details{
\code{mobKriging} is an interface to function \code{\link[party]{mob}} with fixed argument \code{model = kmModel} that
avoids name clashes between arguments of \code{\link[party]{mob}} and \code{\link[DiceKriging]{km}}.
(For example, both, \code{\link[DiceKriging]{km}} and \code{\link[party]{mob}}, have arguments called \code{formula} and \code{control}.)

The \code{formula} argument of \code{\link[DiceKriging]{km}} which specifies the linear trend of the kriging model
must only contain the modeling features (\code{x1} to \code{xk}).
It can be passed to \code{\link[DiceKriging]{km}} via the \code{km.args} argument, see the examples.
}
\examples{
if (require(DiceKriging)) {
    d <- 2L
    x <- seq(0, 1, length = 10L)
    design <- expand.grid(x1 = x, x2 = x)
    y <- apply(design, 1, branin)
    df <- data.frame(y = y, design)

    ## no trend (formula = ~ 1)
    m <- mobKriging(y ~ x1 + x2 | x1 + x2, data = df,
        control = mob_control(verbose = TRUE))

    ## linear trend using all modeling features (formula = ~ .)
    m <- mobKriging(y ~ x1 + x2 | x1 + x2, data = df,
        km.args = list(formula = ~ ., control = list(trace = FALSE)),
        control = mob_control(minsplit = 30L, verbose = FALSE))

    ## linear trend using all modeling features (formula = ~ .)
    m <- mobKriging(obj = "y", feat = c("x1", "x2"), part = c("x1", "x2"), data = df,
        km.args = list(formula = ~ ., control = list(trace = FALSE)),
        control = mob_control(verbose = FALSE, parm = 1:4))

   coef(m)
   # logLik(m)
   # residuals(m)
}
}

